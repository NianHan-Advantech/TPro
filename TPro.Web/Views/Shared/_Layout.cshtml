<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TPro.Web</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/elementui.css" />
    <link rel="stylesheet" href="~/css/site.css" />
    @await RenderSectionAsync("Styles", required: false)
</head>
<body>
    <div id="app">
        <header>
            <el-menu :default-active="activeIndex" class="el-menu-demo" mode="horizontal" @@select="handleSelect">
                <div class="menu-left" v-for="(one,i) in routes" :key="i">
                    <template v-if="one.Children.length>0">
                        <el-submenu :index="countindex(i)">
                            <template slot="title">
                                <a :href="one.RoutePath" slot="title"><img :src="one.IconPath" />{{one.Name}}</a>
                            </template>
                            <el-menu-item v-for="(two,j) in one.Children" :key="j" :index="countindex(i,j)">
                                <span slot="title"><img :src="one.IconPath" />{{one.Name}}</span>
                            </el-menu-item>
                        </el-submenu>
                    </template>
                    <template v-else>
                        <el-menu-item :index="countindex(i)">
                            <a :href="one.RoutePath" slot="title"><img :src="one.IconPath" />{{one.Name}}</a>
                        </el-menu-item>
                    </template>
                </div>
                <el-submenu index="-1" style="float:right;" class="user-menu" :popper-append-to-body="false">
                    <template slot="title"><i class="el-icon-user-solid"></i>{{userinfo}}</template>
                    <el-menu-item index="-1-1"><i class="el-icon-user-solid"></i>个人中心</el-menu-item>
                    <el-menu-item index="-1-1"> <i class="el-icon-s-tools"></i>设置</el-menu-item>
                    <el-menu-item index="-1-1"><a @@click="logout"><i class="el-icon-switch-button"></i>退出</a></el-menu-item>
                </el-submenu>
                <el-menu-item index="-2" style="float:right;"><i class="el-icon-message-solid"></i>消息</el-menu-item>
            </el-menu>
        </header>
        <div class="container">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    </div>


    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2022 - TPro.Web - <a asp-area="Admin" asp-controller="Home" asp-action="Index">后台管理</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/axios.js"></script>
    <script src="~/lib/vue.js"></script>
    <script src="~/lib/elementui.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script>
        var app = new Vue({
            el: '#app',
            mixins: [mixin],
            data() {
                return {
                    activeIndex: '1',
                    routes: [
                        { Name: 'System Icon', IconPath: '', RoutePath: '/', Children: [] },
                        { Name: 'DRR', IconPath: '', RoutePath: '/Drage/Index', Children: [] },
                    ],
                    userinfo: ''
                }
            },
            mounted() {
                this.initapp()
            },
            methods: {
                countindex() {
                    var index = ''
                    for (let i = 0; i < arguments.length; i++) {
                        if (i > 0) {
                            index = `${index}-${arguments[i]}`
                        } else {
                            index = `${arguments[i]}`
                        }
                    }
                    return index;
                },
                handleSelect(key, keyPath) {
                    this.activeIndex = key
                    localStorage.setItem("activeindex", key)
                    //let indexs = key.split('-')
                    //let node = this.routes
                    //indexs.forEach((item, j) => {
                    //    if (j == 0) {
                    //        node = node[item]
                    //    } else {
                    //        node = node.Children[item]
                    //    }
                    //})
                    //if (node?.RoutePath == undefined) {
                    //    this.$message.warning("错误的地址")
                    //} else {
                    //    window.location.href = node.RoutePath
                    //}
                },
                logout() {
                    axios.get("/TPUser/UserLogOut")
                        .then((res) => {
                            window.location.href = "/"
                        }).catch(err => console.error(err))
                        .finally(() => this.loading = false)
                },
                initapp() {
                    this.userinfo = localStorage.getItem("userinfo")
                    this.activeIndex = localStorage.getItem("activeindex")
                }
            }
        })
    </script>

</body>
</html>
